html {
    --color-accent: oklch(0.6 0.0926 310.1);
    accent-color: var(--color-accent);
}

body {
    /* Set line height to 1.5 times the font size
         and use the OS’s UI font as the website font
       */
    
    font: 100%/1.5 system-ui;
    /**display:inline-flex;*/
    max-width: 125ch; 
    margin-inline: max(1em, (100% - 125ch) / 2); 
    padding: 10px;
}

/* ul.ul-nav {
    display: contents;
    li {
        display: contents;
    }
} */

form {
    display: grid;
    grid-template-columns: auto 1fr;
    gap: 1em;

    label {
        display: grid;
        grid-template-columns: subgrid;
        grid-column: 1 / -1;
    }
}

input, textarea, button, select {
    font: inherit;
}

/**
form {
    label {
        display: block;
        margin-block: 0.5em;
    }

    input {
        display: block;
        width: 100%;
        box-sizing: border-box;
        font: inherit;
    }
    
    textarea {
        display: block;
        width: 100%;
        box-sizing: border-box;
        font: inherit;
    }
    
    button {
        display: block;
        width: 100%;
        box-sizing: border-box;
        font: inherit;
    }
}
**/

nav {
    --border-color: oklch(50% 10% 200 / 40%);

    display: flex;
    margin-bottom: 20px;
    border-bottom-width: 1px;
    border-bottom-style: solid;
    border-bottom-color: var(--border-color);

    a.current {
        border-bottom-width: 0.4em;
        border-bottom-style: solid;
        border-bottom-color: var(--border-color);
        padding: 0.4em + 1px;
    }

    a {
        flex: 1;
        text-decoration: none;
        color: inherit;
        text-align: center;
        padding: 0.5em;
    }

    a:hover {
        border-bottom-width: 0.4em;
        border-bottom-style: solid;
        border-bottom-color: var(--color-accent);
        background-color: color-mix(in oklch, var(--color-accent), canvas 85%);
    }
}

.projects {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(15em, 1fr));
    gap: 1em;

    article {
        display: grid;
        grid-template-rows: subgrid;
        grid-row: span 3;

        img {
            max-width: 100%;
            max-height: 100%;
        }

        i {
            font-family: Baskerville;
            font-variant-numeric: oldstyle-nums;
        }
    }

    h2 {
        margin: 0;
    }
}

.latest-projects {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(20em, 1fr));
    gap: 1em;

    article {
        display: grid;
        grid-template-rows: subgrid;
        grid-row: span 3;

        img {
            max-width: 100%;
            max-height: 100%;
        }

        i {
            font-family: Baskerville;
            font-variant-numeric: oldstyle-nums;
        }
    }

    h2 {
        margin: 0;
    }
}

#profile-stats dl {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 1em;
    row-gap: 0em;

    dt {
        grid-row: 1;
        align-items: start;
        font-size: 13px;
    }

    dd {
        grid-row: 2;
        margin: 0;
        font-size: 26px;
    }
}

h1 {
    font-size: 400%;
    color: oklch(0.31 0.0926 310.1);
}

h2 {
    color: var(--color-accent)
}

h3 {
    color: oklch(0.6 0.114 310.1 / 50.48%);
    padding-bottom: 0.3em;
    text-decoration: underline;
}

h1, h2, h3, h4, h5, h6 {
    line-height: 1.1;
    text-wrap: balance;
}

.port-text {
    text-align: center;
}

p.port-text {
    margin-top: 0em;
}

.port-image {
    display: flex;
    justify-content: center;

    img {
        max-height: 750px;
        max-width: 90%;
    }
}

li.phone {
    list-style-type: '☏';
    padding-left: 5px;
}

li.email {
    list-style-type: '✉';
    padding-left: 5px;
}

li.location {
    list-style-type: '⚲ ';
    padding-left: 5px;
}

h1.resume-name {
    margin-block-end: 0.2em;
}

h2.resume-role {
    margin-block-start: 0em;
}

section {
    h3 {
        margin-block-end: 0.1em;
    }

    ul {
        margin-block: 0em;
    }

    p {
        margin-block-start: 0em;
    }

    article {
        margin-left: 40px;
    }

    article.second-plus {
        padding-top: 0.2em;
    }

    a {
        text-decoration: none;
        color: inherit;
    }

    a:hover {
        text-decoration: underline;
        text-decoration-color: var(--color-accent);
        background-color: color-mix(in oklch, var(--color-accent), canvas 85%);
    }
}


.parent {
    display: flex;
    width: 100%;
}
  
.child {
    flex: 1;
    padding-right: 20px;
}

#first-child {
    border-right: 1px solid oklch(80% 3% 200);
}
  
.child:first-child {
    margin-right: 20px;
}

.color-scheme {
    position: absolute;
    top: 1px;
    right: 25px;
    font-size: 55%;
    font-family: inherit;
}

#projects-pie-plot {
    max-width: 20em;
    min-width: 15em;
    margin-block: 2em;
    border: 0.5px solid oklch(0.31 0.0926 310.1);
    border-radius: 50%;

    flex: 1;
}

.legend {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(9em, 1fr));
    gap: 0.5em;
    padding: 1em;
    padding-right: 0em;
    list-style: none;
    
    border-width: 1px;
    border-style: solid;
    border-color: oklch(0.31 0.0926 310.1);

    flex: 1;

    .legend-item {
        display: flex;
        align-items: center;
        gap: 0.25em;

        .swatch {
            width: 1em;
            aspect-ratio: 1 / 1;
            background-color: var(--color);
            border-radius: 50%;
        }
    }

    .legend-item-selected {
        --color: oklch(60% 45% 0) !important;
        display: flex;
        align-items: center;
        gap: 0.25em;
        
        .swatch {
            width: 1em;
            aspect-ratio: 1 / 1;
            background-color: var(--color);
            border-radius: 50%;
        }
    }
}

.container {
    display: flex;
    align-items: center;
    gap: 1.5em;
}

.searchBar {
    margin-top: 1em;
    margin-bottom: 1em;
    width: 100%;
    padding: 0.25em;
    font-size: 20px;
}

&:has(path:hover) {
    path:not(:hover) {
        opacity: 0.5;
    }
}

path {
    transition: 300ms;
}

.selected {
    --color: oklch(60% 45% 0) !important;
  
    &:is(path) {
      fill: var(--color);
    }
}